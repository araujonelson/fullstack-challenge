name: CD Deploy
on:
  push:
    branches: [devel, stage, prod]

permissions:
  contents: read
  id-token: write

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: ${{ github.ref_name }}
    outputs:
      site_bucket: ${{ steps.read.outputs.site_bucket }}

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Deploy Infrastructure
        working-directory: terraform
        run: |
          terraform init
          terraform workspace select "$ENVIRONMENT" || terraform workspace new "$ENVIRONMENT"
          terraform apply -auto-approve

      - name: Read outputs
        id: read
        working-directory: terraform
        run: echo "site_bucket=$(terraform output -raw site_bucket)" >> "$GITHUB_OUTPUT"

  deploy:
    needs: terraform
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          path: app

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '15'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Build & Deploy
        working-directory: app
        run: |
          npm install
          npm run build
          aws s3 sync build s3://${{ needs.terraform.outputs.site_bucket }} --delete